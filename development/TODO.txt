Getting started:
  Download Anaconda 3 or miniconda and PyCharm. Install the environment
    "Profiles_dev" (in this folder).
  If you make changes to the environment, export the entire environment to post
    all changes on GitHub.
  Download Sphinx for documentation. All settings are in conf.py, which is in
    this folder.
  To install new package version without publishing, cd into "dist" and do
    "pip install " and the name of the file ending in ".whl"

  To publish a new version, follow these steps:
    1) setup.py - review and change version number
    2) docsrc/conf.py - change version number
    3) terminal - type "make github" from directory "Profiles" to build
         documentation
    4) terminal - type "python3 -m pip install --user --upgrade setuptools
         wheel" to update wheel
    5) terminal - type "python3 setup.py sdist bdist_wheel" to make/update
         profiles package
    6) terminal - type "python3 -m pip install --user --upgrade twine" to
         update twine
    7) terminal - type "python3 -m twine upload --repository-url
         https://test.pypi.org/legacy dist/*" to upload profiles to Test PyPI

Pressure Altitude:
    Add flag (boolean parameter) from Profiles down to use altitude calculated
  from pressure rather than the GPS-based altitude.
    The iterative equation for the calculation (using LaTex-style markdown) is
  alt_n = alt_{n-1} + \Delta P * \frac{R_d*T}{P_{layer_mean}*g}

Acceptable Bounds of Variation and Bias:
    Each time utils.qc() is called (so far only in Thermo_Profile, but will
  also be used in Wind_Profile and CO2_Profile), the maximum acceptable
  difference of the variance of one sensor from the mean variance and the
  maximum acceptable difference of the mean of one sensor from the mean of all
  sensors should be determined empirically. The values currently in use are
  acceptable for testing purposes, but may (or may not) benefit significantly
  from optimization.

CO2:
  Read
    In Raw_Profile, add ability to read in CO2 data to _read_JSON once a sample
    JSON becomes available. Add CO2 to _read_netCDF and _save_netCDF.

  CO2_Profile
    Implement CO2_Profile. A skeleton file already exists.

  User access
    In Profile.get_co2_profile, create a CO2_Profile object.

AFTER ANY CHANGE TO THE USER INTERFACE, UPDATE RST FILES AND HTML FILES.
Email jessicamblunt@gmail.com if you are unsure how to do this - I can
make changes remotely.
